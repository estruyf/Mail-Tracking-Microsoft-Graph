{"version":3,"sources":["helpers/trackingHelper.ts"],"names":[],"mappings":"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","file":"helpers/trackingHelper.js","sourcesContent":["import * as request from \"superagent\";\r\nimport * as moment from \"moment\";\r\n\r\nimport { IConfig } from '../utils/IConfig';\r\nimport { IContext } from '../utils/IContext';\r\nimport { ITrackers } from '../utils/ITrackers';\r\nimport { IMessage } from '../utils/IMessage';\r\n\r\nconst knownTrackers: ITrackers = require('../trackers.json');\r\nexport default class Tracking {\r\n    constructor (public config: IConfig, public context: IContext) {}\r\n\r\n    public checkMail(mail, token: string) {\r\n        this.context.log(\"INFO: Checking mail with SubscriptionId > \", mail.subscriptionId);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let resource = mail.resource;\r\n            let reqUrl = `https://graph.microsoft.com/v1.0/${resource}`;\r\n            request\r\n                .get(reqUrl)\r\n                .set({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                })\r\n                .end((error, response) => {\r\n                    if (error || !response.ok) {\r\n                        this.context.log('ERROR: There was an error checking the mail.');\r\n                        this.context.log(JSON.stringify(response.body));\r\n                        resolve(error);\r\n                        return;\r\n                    }\r\n\r\n                    this.context.log(\"INFO: Retrieved mail content\");\r\n                    const result: IMessage = response.body;\r\n                    if (result) {\r\n                        // Check for a tracker\r\n                        let bodyHtml = result.body.content;\r\n                        let tracking = false;\r\n                        let trackingNames = [];\r\n                        if (typeof result.categories !== 'undefined') {\r\n                            trackingNames = result.categories;\r\n                            // Nothing to do, because it already contains the tracking category\r\n                            if (trackingNames.indexOf(\"Tracked\") !== -1) {\r\n                                resolve(null);\r\n                                return;\r\n                            }\r\n                        }\r\n                        // Put tracking first\r\n                        trackingNames.unshift(\"Tracked\");\r\n                        // Check if one of the trackers is used\r\n                        knownTrackers.trackers.forEach((tracker) => {\r\n                            // Check if the email body contains the tracking URL part\r\n                            if (bodyHtml.indexOf(tracker.url) !== -1) {\r\n                                tracking = true;\r\n                                trackingNames.push(tracker.name);\r\n                            }\r\n                        });\r\n\r\n                        // Check if mail was tracked\r\n                        if (tracking) {\r\n                            this.context.log(\"INFO: Mail is tracked, adding tracking categories\");\r\n                            request\r\n                                .patch(reqUrl)\r\n                                .set({\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    \"Accept\": \"application/json\",\r\n                                    \"Authorization\": \"Bearer \" + token\r\n                                })\r\n                                .send(JSON.stringify({\r\n                                    categories: trackingNames\r\n                                }))\r\n                                .end((error, response) => {\r\n                                    if (error || !response.ok) {\r\n                                        this.context.log('ERROR: There was a problem patching the mail.');\r\n                                        this.context.log(JSON.stringify(response.body));\r\n                                        resolve(error);\r\n                                    } else {\r\n                                        resolve(null);\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            console.log(`INFO: Nothing to do for this mail: ${mail.subscriptionId}`);\r\n                            resolve(null);\r\n                        }\r\n                    } else {\r\n                        this.context.log(`ERROR: With retrieving the mail.`);\r\n                        resolve(null);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n}"],"sourceRoot":"/source/"}