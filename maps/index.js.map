{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import authHelper from './helpers/authHelper'; \r\nimport subscriptionHelper from './helpers/subscriptionHelper'; \r\nimport trackingHelper from './helpers/trackingHelper';\r\n\r\nimport { IConfig } from './utils/IConfig';\r\nimport { IContext } from './utils/IContext';\r\n\r\nclass Tracker {\r\n    private _config: IConfig;\r\n    private _context: IContext;\r\n\r\n    constructor (context: IContext, config: IConfig) {\r\n        this._config = config;\r\n        this._context = context;\r\n    }\r\n\r\n    public init(action: string, body: any) {\r\n        const auth = new authHelper(this._config);\r\n        auth.getAppOnlyAccessToken().then((token) => {\r\n            this._context.log('INFO: Access token retrieved');\r\n            // Check if the query contains an action\r\n            if (action) {\r\n                const subscription = new subscriptionHelper(this._config, this._context);\r\n                // New action to complete\r\n                this._context.log(`INFO: Current action > ${action}`);\r\n\r\n                switch (action) {\r\n                    // Check if you want to create a new subscription\r\n                    case \"create\":\r\n                        subscription.create(token).then(() => {\r\n                            this._end({ status: 200, body: \"ok\" });\r\n                        }).catch(error => {\r\n                            this._end({ status: 200, body: \"nok\" });\r\n                        });\r\n                        break;\r\n                    // Check if you want to update an existing subscription\r\n                    case \"update\":\r\n                        subscription.update(token).then(() => {\r\n                            this._end({ status: 200, body: \"ok\" });\r\n                        }).catch(error => {\r\n                            this._end({ status: 200, body: \"nok\" });\r\n                        });\r\n                        break;\r\n                    // Check if you want to delete an existing subscription\r\n                    case \"delete\":\r\n                        subscription.delete(token).then(() => {\r\n                            this._end({ status: 200, body: \"ok\" });\r\n                        }).catch(error => {\r\n                            this._end({ status: 200, body: \"nok\" });\r\n                        });\r\n                        break;\r\n                    default:\r\n                        this._end({ status: 200, body: \"ok\" });\r\n                        break;\r\n                }\r\n            } else {\r\n                if (typeof body !== \"undefined\") {\r\n                    const track = new trackingHelper(this._config, this._context);\r\n                    const proms = [];\r\n                    body.value.forEach(mail => {\r\n                        proms.push(track.checkMail(mail, token));\r\n                    });\r\n                    Promise.all(proms).then(data => {\r\n                        this._end({ status: 202, body: \"ok\" });\r\n                    }).catch(error => {\r\n                        this._end({ status: 202, body: \"nok\" });\r\n                    });\r\n                } else {\r\n                    this._end({ status: 202, body: \"ok\" });\r\n                }\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this._context.log(\"ERROR: \", JSON.stringify(err));\r\n            this._end({});\r\n        });\r\n    }\r\n\r\n    private _end(res) {\r\n        this._context.done(null, res)\r\n    }\r\n}\r\n\r\nmodule.exports = function (context: IContext, req) {\r\n    const config: IConfig = require('./config.json');;\r\n    console.log('ENV:', process.env.NODE_ENV);\r\n\r\n    // Check if you are retrieving a validation token\r\n    if (req.query && req.query.validationToken) {\r\n        context.log('INFO: Validation token > ', req.query.validationToken);\r\n        context.done(null, {\r\n            status: 200,\r\n            body: req.query.validationToken\r\n        });\r\n    } else {\r\n        // Check if it contains a querystring or body\r\n        if (req.query || req.body) {\r\n            const action = (req.query.action || req.body.action);\r\n            const body = req.body;\r\n            const tracking = new Tracker(context, config);\r\n            tracking.init(action, body);\r\n        } else {\r\n            context.done(null, { status: 404, body: \"nok\" });\r\n        }\r\n    }\r\n};"],"sourceRoot":"/source/"}