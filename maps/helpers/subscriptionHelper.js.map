{"version":3,"sources":["helpers/subscriptionHelper.ts"],"names":[],"mappings":"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","file":"helpers/subscriptionHelper.js","sourcesContent":["import * as request from \"superagent\";\r\nimport * as moment from \"moment\";\r\n\r\nimport { IConfig } from '../utils/IConfig';\r\nimport { IContext } from '../utils/IContext';\r\n\r\nexport default class subscriptionHelper {\r\n    private subConfig = this.config.subscriptionConfig;\r\n\r\n    constructor (public config: IConfig, public context: IContext) {}\r\n\r\n    public create(token: string): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.context.log(\"INFO: Creating a new subscription\");\r\n            this.subConfig.expirationDateTime = this.getExpirationDate();\r\n\r\n            // Create the new subscription\r\n            request\r\n                .post(this.config.adalConfig.subscriptionUrl)\r\n                .set({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                })\r\n                .send(JSON.stringify(this.subConfig))\r\n                .end((error, response) => {\r\n                    if (error || !response.ok) {\r\n                        this.context.log('ERROR: There was an error creating the subscription.');\r\n                        this.context.log(JSON.stringify(response.body));\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    const result = response.body;\r\n                    if (result) {\r\n                        if (typeof result.id !== \"undefined\") {\r\n                            this.context.log(`INFO: Subscription created with the following ID > ${result.id}`);\r\n                        } else {\r\n                            this.context.log(`ERROR: Problem creating the subscription > ${JSON.stringify(result)}`);\r\n                        }\r\n                        resolve(null);\r\n                    } else {\r\n                        this.context.log(`ERROR: Problem creating the subscription. Body was not defined.`);\r\n                        resolve(null);\r\n                    }\r\n                });\r\n\t\t});\r\n    }\r\n\r\n\r\n    public update(token: string): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.context.log(\"INFO: Updating the existing subscription\");\r\n\r\n            request\r\n                .patch(`${this.config.adalConfig.subscriptionUrl}/${this.config.adalConfig.subscriptionId}`)\r\n                .set({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                })\r\n                .send(JSON.stringify({\r\n                    \"expirationDateTime\": this.getExpirationDate()\r\n                }))\r\n                .end((error, response) => {\r\n                    if (error || !response.ok) {\r\n                        this.context.log('ERROR: There was an error updating the subscription.');\r\n                        this.context.log(JSON.stringify(response.body));\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    const result = response.body;\r\n                    if (result) {\r\n                        if (typeof result.id !== \"undefined\") {\r\n                            this.context.log(`INFO: Subscription updated > ${this.config.adalConfig.subscriptionId}`);\r\n                        } else {\r\n                            this.context.log(`ERROR: Problem updating the subscription > ${JSON.stringify(result)}`);\r\n                        }\r\n                        resolve(null);\r\n                    } else {\r\n                        this.context.log(`ERROR: Problem updating the subscription. Body was not defined.`);\r\n                        resolve(null);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    public delete(token: string): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.context.log(\"INFO: Updating the existing subscription\");\r\n\r\n            request\r\n                .del(`${this.config.adalConfig.subscriptionUrl}/${this.config.adalConfig.subscriptionId}`)\r\n                .set({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + token\r\n                })\r\n                .end((error, response) => {\r\n                    if (error || !response.ok) {\r\n                        this.context.log('ERROR: There was an error deleting the subscription.');\r\n                        this.context.log(JSON.stringify(response.body));\r\n                        reject(error);\r\n                        return;\r\n                    }\r\n\r\n                    const result = response.body;\r\n                    if (result) {\r\n                        this.context.log(`INFO: Subscription deleted`);\r\n                        resolve(null);\r\n                    } else {\r\n                        this.context.log(`ERROR: Problem deleting the subscription. Body was not defined.`);\r\n                        resolve(null);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    private getExpirationDate() {\r\n        // Request this subscription to expire one day from now.\r\n        // Note: 1 day = 86400000 milliseconds\r\n        // The name of the property coming from the service might change from\r\n        // subscriptionExpirationDateTime to expirationDateTime in the near future.\r\n        return new Date(Date.now() + (86400000 * 2.9)).toISOString();\r\n    }\r\n}"],"sourceRoot":"/source/"}