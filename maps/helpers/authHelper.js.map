{"version":3,"sources":["helpers/authHelper.ts"],"names":[],"mappings":";AAEA,IAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,IAAM,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;AAIzD;IACI,oBAAmB,MAAe;QAAf,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAKhC,0CAAqB,GAA5B;QAAA,iBAWC;QAVG,MAAM,CAAC,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACpC,IAAI,OAAO,GAAG,IAAI,qBAAqB,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAC1E,OAAO,CAAC,iCAAiC,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,aAAa;gBAChK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACN,MAAM,CAAC,GAAG,CAAC,CAAC;gBAChB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACL,iBAAC;AAAD,CAlBA,AAkBC,IAAA","file":"helpers/authHelper.js","sourcesContent":["import * as request from \"superagent\";\r\n\r\nconst adal = require('adal-node');\r\nconst AuthenticationContext = adal.AuthenticationContext;\r\n\r\nimport { IConfig } from '../utils/IConfig';\r\n\r\nexport default class authHelper {\r\n    constructor(public config: IConfig) { }\r\n\r\n    /**\r\n     * Gets an app-only access token\r\n     */\r\n    public getAppOnlyAccessToken(): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            var context = new AuthenticationContext(this.config.adalConfig.authority);\r\n            context.acquireTokenWithClientCredentials(this.config.adalConfig.graphUrl, this.config.adalConfig.clientID, this.config.adalConfig.clientSecret, (err, tokenResponse) => {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    resolve(tokenResponse.accessToken);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}"],"sourceRoot":"/source/"}